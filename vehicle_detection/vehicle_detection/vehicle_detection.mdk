.madoko { html-lang: zh-Hans-CN; }
.cn { html-lang: zh-Hans-CN }
.tw { html-lang: zh-Hans-TW }

Title         : 车辆检测概览
Author        : 李其迈
Logo          : false

[TITLE]

常用的车辆检测的思路有两种。一种是基于车辆的外观进行检测，另一种则是利用车辆的移动性进行检测。对于单摄像头拍摄的图像，我们会直接在原图上进行检测。对于拥有立体视觉的摄像头，可以选择先进行三维重构，然后在三维空间进行检测，这样可以获得汽车在三维空间的位置，但是计算量大，适用于自动驾驶，辅助驾驶等系统。下面主要讨论在二维图像上的车辆检测。

# 基于车辆外观的检测

可以同时检测运动中的和静止的车辆，在道路和停车场等场景中都可以使用，计算量比较大，精度比较高。这种检测方式可以应用于单张图片，并不需要一段视频。

对于图片，我们可以先提取特征，之后在特征上进行分类。

1. 常用的特征：HOG, Haar-like, SIFT, SURF, ICF, Gabor, 边缘, symmetry, 梯度幅值。等都有人尝试过。

2. 分类器：SVM, DT, LR, Knn, adaboost 等等。ML领域常用的分类器都可以试试。

这些特征和分类器也难分优劣。每种分类器的基础上，都有人在做改进。特征和分类器的组合需要针对不同的数据集，通过实验来选择。


# 基于运动的车辆检测

利用汽车的移动性，把一般的检测运动物体的方法应用到车辆检测上，适用于道路场景，尤其是高速公路这种除了车辆以外几乎没有其他运动物体的场景。检测的输入为一段视频流。单纯的基于运动的检测抗干扰能力不强，因为很多时候画面中移动的不只有车辆。所以检在测到移动物体后，往往仍然需要使用基于外观的检测方式来判断是否为车辆。基于运动的车辆检测也有两种方法：

## Backgroud Subtraction
用每一张图片减去一个背景图片，当像素值的差大于某个阀值，则认定这个像素上有移动物体。算法的关键在于背景图片的选取。如果背景不会变动，则手工选择一个固定的背景即可。这种方式比较适合光照、背景物体都恒定的停车场。对于一般公路，需要动态计算背景（比如路边新加入了一个垃圾桶，则需要动态更新背景，将这个垃圾桶加入背景，而不能算是移动物体）。这时往往使用最近一段时间的图像，求平均值、中位数等方法，动态计算背景。根据背景变化频率不同，用以计算背景的视频短则几帧，长则几十分钟。选取不同的长度，效果相差也很大。

这种判断移动物体的想法很朴素，实现简单，运算量也小。

## Optical Flow
提出很多年的一种检测移动物体的算法。实际上是一种像素追踪算法，需要对相邻两帧的像素进行逐个匹配。对于像素移动的距离设定阈值之后，可以实现运动检测。因为本质是一种追踪算法，所以计算量比较大，但是可以获得额外的信息，比如速度,运动方向，车辆转向情况等信息。


# 运动检测结合基于外形的识别
很自然的一种想法：

1. 先对图像进行运动检测
2. 再在检测到运动的部分进行基于外观的识别

这样可以减少许多无意义的窗口扫描，提高运算速度。


# 关于固定光照条件的一些想法

光照条件对于各种车辆检测算法影响都很大，我们往往都希望能够有一个恒定的光照。如果能模仿夜视仪等设备，找到一个自然环境中很少见的红外线频段，之后由我们主动发出这个频段的电磁波，特殊设备接收，就能得到固定的光照条件。但是这个需要硬件支持。
